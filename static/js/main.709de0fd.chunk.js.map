{"version":3,"sources":["FiveElements.jsx","ShadowLayer.jsx","title.jsx","App.js","serviceWorker.js","index.js"],"names":["FiveElements","Fragment","className","this","props","changeClassname","id","onClick","arrowOnclickUp","src","newData","arrow","style","display","weathervalue","time","icon","alt","degree","Component","ShadowLayer","image_counter","Title","changeImage","imgurl","link","loopImage","setInterval","changeImages","document","getElementById","onSubmit","handleGetWeather","type","placeholder","name","handleOnclick","current","arrowOnclick","arrowup","onLoad","droplet","API_KEY","count1","count2","imageArray","App","state","toggle","undefined","zIndex","classList","remove","add","visibility","setState","setTimeout","classes","addToArray","newImage","push","console","log","UNSAFE_componentWillMount","dateObj","Date","i","tryToGetImage","setMinutes","getMinutes","dateStr","getUTCFullYear","String","getUTCMonth","padStart","getUTCDate","timeStr","getUTCHours","filename","getUTCMinutes","Image","url","onload","onerror","getTime","getHours","getWeather","e","a","preventDefault","city","target","elements","value","fetch","api_call","json","data","count","currentTime","postFix","map","x","Math","round","list","main","temp","weather","description","replace","handleOnload","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.709de0fd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './FiveElements.css';\r\nclass FiveElements extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={this.props.changeClassname()} id=\"fiveid\">\r\n                    <div className=\"icons3\">  <img className=\"arrow1\" onClick={this.props.arrowOnclickUp} src={this.props.newData.arrow} /></div>\r\n                    <div style={{ display: this.props.newData.display }} className=\"col-md col-sm-12 text-center colborder\">\r\n                        <span className=\" clock1\">{this.props.newData.weathervalue[1].time}</span>\r\n                        <img src={this.props.newData.weathervalue[1].icon} alt={this.props.newData.weathervalue[1].icon} className=\"\" />\r\n                        <br className=\"break\" />\r\n                        <span className=\"fivedegrees\">{this.props.newData.weathervalue[1].degree} </span>\r\n                    </div>\r\n                    <div style={{ display: this.props.newData.display }} className=\"col-md col-sm-12 text-center colborder\">\r\n                        <span className=\" clock1\">{this.props.newData.weathervalue[2].time}</span>\r\n                        <img src={this.props.newData.weathervalue[2].icon} alt={this.props.newData.weathervalue[2].icon} className=\"\" />\r\n                        <br className=\"break\" />\r\n                        <span className=\"fivedegrees\">{this.props.newData.weathervalue[2].degree} </span>\r\n                    </div>\r\n                    <div style={{ display: this.props.newData.display }} className=\"col-md col-sm-12 text-center colborder\">\r\n                        <span className=\" clock1\">{this.props.newData.weathervalue[3].time}</span>\r\n                        <img src={this.props.newData.weathervalue[3].icon} alt={this.props.newData.weathervalue[3].icon} className=\"\" />\r\n                        <br className=\"break\" />\r\n                        <span className=\"fivedegrees\">{this.props.newData.weathervalue[3].degree} </span>\r\n                    </div>\r\n                    <div style={{ display: this.props.newData.display }} className=\"col-md col-sm-12 text-center colborder\">\r\n                        <span className=\" clock1\">{this.props.newData.weathervalue[4].time}</span>\r\n                        <img src={this.props.newData.weathervalue[4].icon} alt={this.props.newData.weathervalue[4].icon} className=\"\" />\r\n                        <br className=\"break\" />\r\n                        <span className=\"fivedegrees\">{this.props.newData.weathervalue[4].degree} </span>\r\n                    </div>\r\n                    <div style={{ display: this.props.newData.display }} className=\"col-md col-sm-12 text-center colborder\">\r\n                        <span className=\" clock1\">{this.props.newData.weathervalue[5].time}</span>\r\n                        <img src={this.props.newData.weathervalue[5].icon} alt={this.props.newData.weathervalue[5].icon} className=\"\" />\r\n                        <br className=\"break\" />\r\n                        <span className=\"fivedegrees\">{this.props.newData.weathervalue[5].degree} </span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FiveElements;","import React, { Component } from 'react';\r\nclass ShadowLayer extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"liboxx\" className=\"row text-center justify-content-center libox\">\r\n\r\n                <div className=\"col-md col-sm-12 text-center libox1\">\r\n                    <span className=\"clock\">{this.props.newData.weathervalue[1].time}</span>\r\n                </div>\r\n                <div className=\"col-md col-sm-12 text-center libox1\">\r\n                    <span className=\"clock\">{this.props.newData.weathervalue[2].time}</span>\r\n                </div>\r\n                <div className=\"col-md col-sm-12 text-center libox1\">\r\n                    <span className=\"clock\">{this.props.newData.weathervalue[3].time}</span>\r\n                </div>\r\n                <div className=\"col-md col-sm-12 text-center libox1\">\r\n                    <span className=\"clock\">{this.props.newData.weathervalue[4].time}</span>\r\n                </div>\r\n                <div className=\"col-md col-sm-12 text-center libox1\">\r\n                    <span className=\"clock\">{this.props.newData.weathervalue[5].time}</span>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShadowLayer;","import React, { Component } from 'react';\r\nimport FiveElements from './FiveElements';\r\nimport ShadowLayer from './ShadowLayer';\r\nlet image_counter = 0;\r\nclass Title extends Component {\r\n\r\n    changeImage = () => {\r\n        let link = this.props.newData.imgurl[0].link;\r\n\r\n        return link;\r\n    }\r\n    loopImage = () => {\r\n        setInterval(this.changeImages, 2000);\r\n    }\r\n    changeImages = () => {\r\n        let link = this.props.newData.imgurl[image_counter % 10].link;\r\n        document.getElementById(\"img-holder\").src = link;\r\n        image_counter++;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row box1\" id=\"box1id\">\r\n                    <div className=\"col-12 col-md-12 col-xl-7 box3\">\r\n                        <h1>Local Weather Six Hour Forecast</h1>\r\n                        <h3>Northern California with dropler radar</h3>\r\n                        <p></p>\r\n                        <form onSubmit={this.props.handleGetWeather}>\r\n                            <span className=\"forcast\">Forcast for</span> <input className=\"searchinput\" type=\"text\" placeholder=\"ex: San Francisco\" name=\"city\"></input>\r\n                            <button onClick={this.props.handleOnclick} className=\"btn m-3 submit\">submit</button>\r\n                            <br />\r\n                        </form>\r\n                        <div className=\"box4\">\r\n                            <span className=\"currenttime \">{this.props.newData.current} </span>  <span className=\"currenttime m-3\">{this.props.newData.weathervalue[0].time}</span> <img src={this.props.newData.weathervalue[0].icon} /> <span className=\"degree m-3\">  {this.props.newData.weathervalue[0].degree}</span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-6 box6\">\r\n                                <div className=\"icons\"><img src={this.props.newData.weathervalue[0].icon} /></div>\r\n                                <div className=\"row text-center leftbox\">\r\n                                    <div style={{ display: this.props.newData.display }} className=\"col-6 col-md-6 box7\">\r\n                                        <span className=\"currenttime \">{this.props.newData.current} </span><br /> <span className=\"currenttime m-3\">{this.props.newData.weathervalue[0].time}</span>\r\n                                    </div>\r\n                                    <div className=\"col-6 col-md-6 box8\">\r\n                                        <span className=\"degree m-3\">  {this.props.newData.weathervalue[0].degree}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"icons1\">  <img className=\"arrow\" onClick={this.props.arrowOnclick} src={this.props.newData.arrowup} /></div>\r\n                            </div>\r\n                            <div className=\"col-md-6 box9\">\r\n                                <img className=\"threpics threone\" src={this.changeImage()} onLoad={this.loopImage} ></img>\r\n                                <img className=\"threpics\" src={this.props.newData.droplet[0].link} ></img>\r\n                                <img className=\"threpics\" src={this.props.newData.droplet[1].link} ></img>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-12  col-xl-5 box2\">\r\n                        <form onSubmit={this.props.handleGetWeather}>\r\n                            <img className=\"threpics threone\" src={this.changeImage()} onLoad={this.loopImage} id=\"img-holder\"></img>\r\n                            <img className=\"threpics\" src={this.props.newData.droplet[0].link} id=\"img-holder\"></img>\r\n                            <img className=\"threpics\" src={this.props.newData.droplet[1].link} id=\"img-holder\"></img>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <ShadowLayer newData={this.props.newData} />\r\n                <FiveElements newData={this.props.newData} handleOnclick={this.props.handleOnclick} arrowOnclickUp={this.props.arrowOnclickUp} changeClassname={this.props.changeClassname} />\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\nimport './App.css';\nimport Title from './title';\nconst API_KEY = '64fcc070bac9965e73d62f77086c9a04';\nlet count1 = 0;\nlet count2 = 0;\n\nlet imageArray = [];\n\nclass App extends Component {\n\n  state = {\n    toggle: true,\n    arrowup: undefined,\n    arrow: undefined,\n    display: 'none',\n    droplet: [\n      { link: undefined },\n      { link: undefined },\n    ],\n    imgurl: [\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined },\n      { link: undefined }\n    ],\n    current: undefined,\n    weathervalue: [\n      { id: 1, time: undefined, icon: undefined, degree: undefined },\n      { id: 2, time: undefined, icon: undefined, degree: undefined },\n      { id: 3, time: undefined, icon: undefined, degree: undefined },\n      { id: 4, time: undefined, icon: undefined, degree: undefined },\n      { id: 5, time: undefined, icon: undefined, degree: undefined },\n      { id: 6, time: undefined, icon: undefined, degree: undefined },\n    ]\n  };\n  arrowOnclick = () => {\n    document.getElementById(\"fiveid\").style.zIndex = '1';\n    document.getElementById(\"fiveid\").classList.remove('fiveout');\n    document.getElementById(\"fiveid\").classList.add('fivebox');\n    document.getElementById(\"liboxx\").style.visibility = \"hidden\";\n    // setTimeout(() => {\n    //   document.getElementById(\"fiveid\").classList.remove('fivebox');\n    //  }, 11000);\n    //document.getElementById(\"fiveid\").style.display = \"flex\";\n    //document.getElementById(\"box1id\").style.display = \"none\";\n    this.setState({ toggle: false });\n  }\n  arrowOnclickUp = () => {\n\n    document.getElementById(\"fiveid\").classList.remove('fivebox');\n    document.getElementById(\"fiveid\").classList.add(\"fiveout\");\n    document.getElementById(\"liboxx\").style.visibility = \"visible\";\n    setTimeout(() => {\n      document.getElementById(\"fiveid\").style.zIndex = '-1';\n    }, 1200);\n\n    //setTimeout(() => {\n    // document.getElementById(\"fiveid\").classList.remove('fiveout');\n    // document.getElementById(\"fiveid\").style.display = \"none\";\n    // document.getElementById(\"box1id\").style.display = \"flex\";\n    //}, 11000);\n\n  }\n  changeClassname = () => {\n    let classes = 'row text-center justify-content-center';\n    if (this.state.toggle == true) {\n      classes = classes;\n    } else {\n      classes = classes;\n    }\n    return classes;\n  }\n  handleOnclick = () => {\n    this.setState({ display: 'block' });\n  }\n  addToArray = (newImage) => {\n\n    if (count1 < 10) {\n      imageArray.push(newImage);\n      count1 = count1 + 1;\n      if (count1 >= 10) {\n        console.log(\"Got 10 doppler images\");\n      }\n    }\n  }\n  // this will be executed first inorder to get 10 images into the\n  // global imagesArray\n  UNSAFE_componentWillMount = () => {\n    let dateObj = new Date();  // defaults to current date and time\n    // if we try 150 images, and get one out of every 10, we should get enough\n    for (let i = 0; i < 150; i++) {\n      let newImage = this.tryToGetImage(dateObj);\n      dateObj.setMinutes(dateObj.getMinutes() - 1); // back in time one minute\n    }\n  }\n  //Trying to get  the droppler\n  tryToGetImage = (dateObj) => {\n    let dateStr = dateObj.getUTCFullYear();\n    dateStr += String(dateObj.getUTCMonth() + 1).padStart(2, '0'); //January is 0!\n    dateStr += String(dateObj.getUTCDate()).padStart(2, '0');\n\n    let timeStr = String(dateObj.getUTCHours()).padStart(2, '0')\n    timeStr += String(dateObj.getUTCMinutes()).padStart(2, '0');\n\n    let filename = \"DAX_\" + dateStr + \"_\" + timeStr + \"_N0R.gif\";\n    let newImage = new Image();\n    let url = \"http://radar.weather.gov/ridge/RadarImg/N0R/DAX/\" + filename;\n    newImage.src = \"http://radar.weather.gov/ridge/RadarImg/N0R/DAX/\" + filename;\n    newImage.onload = () => {\n      //console.log(\"got image \" + filename);\n      this.addToArray(url);\n    }\n    newImage.onerror = () => {\n      // console.log(\"failed to load \"+filename);\n    }\n\n\n  }\n\n  // this function will return the \n  // current date in pacific time zone\n  getTime = () => {\n    let date = new Date();\n    return date.getHours();\n  }\n  // this function receive and handle\n  // the api request from the client\n  getWeather = async (e) => {\n\n    //console.log(imageArray);\n    e.preventDefault();\n\n    var city = e.target.elements.city.value;\n    let api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city},us&units=metric&APPID=${API_KEY}`);\n    const data = await api_call.json();\n\n    const { weathervalue } = this.state;\n    let count = 0;\n\n    // getting pacific time zone\n    let currentTime = this.getTime();\n    // this will decide if the time is at day \n    // or at night\n    let postFix = ['AM', 'PM'];\n\n\n    weathervalue.map(x => {\n      // getting 6 hours of temperatures\n      x.degree = Math.round(data.list[count].main.temp) + \"°\";\n\n\n      // handle time between AM and PM and getting icons coresponding to the description\n      if (currentTime > 12) {\n        //handle night icon\n        if (data.list[count].weather[0].description.replace(/\\s/g, '') === 'fewclouds' || data.list[count].weather[0].description.replace(/\\s/g, '') === 'rain' || data.list[count].weather[0].description.replace(/\\s/g, '') === 'clearsky') {\n          x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '-night.svg';\n        } else {\n          x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '.svg';\n        }\n        //handle time\n        currentTime === 24 ? x.time = (currentTime - 12) + ':00' + postFix[0] : x.time = (currentTime - 12) + ':00' + postFix[1];\n        currentTime === 24 ? currentTime = 0 : currentTime = currentTime;\n        currentTime++;\n      } else {\n        //handle day and night icon\n        if (currentTime < 5) {\n          if (data.list[count].weather[0].description.replace(/\\s/g, '') === 'fewclouds' || data.list[count].weather[0].description.replace(/\\s/g, '') === 'rain' || data.list[count].weather[0].description.replace(/\\s/g, '') === 'clearsky') {\n            x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '-night.svg';\n          } else {\n            x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '.svg';\n          }\n        } else if (data.list[count].weather[0].description.replace(/\\s/g, '') === 'fewclouds' || data.list[count].weather[0].description.replace(/\\s/g, '') === 'rain') {\n          x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '-day.svg';\n        } else {\n          x.icon = './assets/' + data.list[count].weather[0].description.replace(/\\s/g, '') + '.svg';\n        }\n\n        //handle time\n        currentTime === 12 ? x.time = currentTime + ':00' + postFix[1] : x.time = currentTime + ':00' + postFix[0];\n        currentTime++;\n      }\n      count++;\n    });\n    count = 0;\n    const { imgurl } = this.state;\n    imgurl.map(x => {\n      x.link = imageArray[count2];\n      count2++;\n    });\n\n    count2 = 0;\n\n    const { droplet } = this.state;\n    droplet[0].link = 'http://radar.weather.gov/ridge/Overlays/Topo/Short/DAX_Topo_Short.jpg';\n    droplet[1].link = 'http://radar.weather.gov/ridge/Overlays/Cities/Short/DAX_City_Short.gif';\n\n    this.setState({ weathervalue: weathervalue, imgurl: imgurl, current: 'Current', droplet: droplet, arrow: './assets/downArrow.svg', arrowup: './assets/upArrow.svg' });\n\n\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Title handleGetWeather={this.getWeather} newData={this.state} handleOnload={this.handleOnload} handleOnclick={this.handleOnclick} changeClassname={this.changeClassname} arrowOnclick={this.arrowOnclick} arrowOnclickUp={this.arrowOnclickUp} />\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}